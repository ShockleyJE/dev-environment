- name: Install core utils on dnf-based systems (Fedora)
  dnf:
    name: ["fzf","vim-enhanced","alacritty", "steam","dnf-plugins-core","neovim","lua","lua-devel","tmux"]
  become: true
  when: ansible_facts.distribution == "Fedora"
  tags:
    - install
    - core

- name: Install core utils on apt-based systems (Ubuntu)
  apt:
    name: ["fzf","vim","alacritty","neovim","lua5.3","liblua5.3-dev","curl","wget","git","build-essential","libfuse2","ffmpeg","tmux"]
  become: true
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core

- name: Install docker repository (Fedora)
  command: dnf config-manager addrepo --from-repofile https://download.docker.com/linux/fedora/docker-ce.repo --overwrite
  become: true
  when: ansible_facts.distribution == "Fedora"
  tags:
    - install
    - core

- name: Add Docker GPG key (Ubuntu)
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: true
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core

- name: Add Docker repository (Ubuntu)
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  become: true
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core

- name: Update apt cache after adding Docker repo (Ubuntu)
  apt:
    update_cache: true
  become: true
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core

- name: Install docker & utils (Fedora)
  dnf:
    name: ["docker-ce", "docker-ce-cli", "containerd.io","docker-buildx-plugin","docker-compose-plugin"]
  become: true
  when: ansible_facts.distribution == "Fedora" 
  tags:
    - install
    - core

- name: Install docker & utils (Ubuntu)
  apt:
    name: ["docker-ce", "docker-ce-cli", "containerd.io","docker-buildx-plugin","docker-compose-plugin"]
  become: true
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core

- name: Enable docker
  systemd_service:
    name: docker
    enabled: true
  become: yes
  
- name: Add user '{{ username }}' to docker group
  user:
    name: '{{ username }}'
    groups: docker
    append: yes
  become: yes

- name: Install flatpak (Ubuntu)
  apt:
    name: flatpak
  become: true
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core

- name: Add flathub repository (Ubuntu)
  flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
  become: true
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core

- name: Install flatpak wares
  community.general.flatpak:
    name: ["md.obsidian.Obsidian","io.dbeaver.DBeaverCommunity"]
  become: true
  tags:
    - install
    - core

- name: Enable Copr for lazygit (Fedora)
  become: true
  community.general.copr:
    name: atim/lazygit
  when: ansible_facts.distribution == "Fedora"
  tags:
    - install
    - core 

- name: Install lazygit on dnf-based systems (Fedora)
  dnf:
    name: ["lazygit"]
  become: true
  when: ansible_facts.distribution == "Fedora"
  tags:
    - install
    - core 

- name: Install snapd (Ubuntu)
  apt:
    name: snapd
  become: true
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core

- name: Check if lazygit is already installed (Ubuntu)
  command: which lazygit
  register: lazygit_installed
  failed_when: false
  changed_when: false
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core

- name: Install lazygit from GitHub releases (Ubuntu)
  shell: |
    LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | \grep -Po '"tag_name": *"v\K[^"]*')
    curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
    tar xf lazygit.tar.gz lazygit
    sudo install lazygit -D -t /usr/local/bin/
    rm -f lazygit lazygit.tar.gz
  become: true
  when: ansible_facts.distribution == "Ubuntu" and lazygit_installed.rc != 0
  tags:
    - install
    - core

- name: Enable Copr for openvpn (Fedora)
  become: true
  community.general.copr:
    name: dsommers/openvpn3
  when: ansible_facts.distribution == "Fedora"
  tags:
    - install
    - core
    - vpn

- name: Install openvpn on dnf-based systems (Fedora)
  dnf:
    name: ["openvpn3-client"]
  become: true
  when: ansible_facts.distribution == "Fedora"
  tags:
    - install
    - core 
    - vpn

- name: Add fs.inotify.max_user_instances to sysctl.conf
  lineinfile:
    path: /etc/sysctl.conf
    regexp: '^fs\.inotify\.max_user_instances='
    line: 'fs.inotify.max_user_instances=8192'
    state: present
  become: true
  tags:
    - install
    - core

- name: Add fs.inotify.max_user_watches to sysctl.conf
  lineinfile:
    path: /etc/sysctl.conf
    regexp: '^fs\.inotify\.max_user_watches='
    line: 'fs.inotify.max_user_watches=524288'
    state: present
  become: true
  tags:
    - install
    - core

- name: Reload sysctl to apply inotify changes
  command: sysctl -p
  become: true
  tags:
    - install
    - core

#//- name: Add OpenVPN 3 repository (Ubuntu)
#//  apt_repository:
#//    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/openvpn-repo-pkg-key.gpg] https://packages.openvpn.net/openvpn3/debian {{ ansible_distribution_release }} main"
#//    state: present
#//  become: true
#//  when: ansible_facts.distribution == "Ubuntu"
#//  tags:
#//    - install
#//    - core
#//    - vpn
#//
#//- name: Add OpenVPN 3 GPG key (Ubuntu)
#//  apt_key:
#//    url: https://packages.openvpn.net/packages-repo-pkg-key.pub
#//    keyring: /usr/share/keyrings/openvpn-repo-pkg-key.gpg
#//    state: present
#//  become: true
#//  when: ansible_facts.distribution == "Ubuntu"
#//  tags:
#//    - install
#//    - core
#//    - vpn
#//
#//- name: Install openvpn3 on apt-based systems (Ubuntu)
#//  apt:
#//    name: ["openvpn3"]
#//    update_cache: true
#//  become: true
#//  when: ansible_facts.distribution == "Ubuntu"
#//  tags:
#//    - install
#//    - core
#    - vpn

- name: Install motif wares from dnf (Fedora)
  dnf:
    name: ["psql","chromium"]
  become: true
  when: ansible_facts.distribution == "Fedora"
  tags:
    - install
    - core 

- name: Install motif wares from apt (Ubuntu)
  apt:
    name: ["postgresql-client","chromium-browser"]
  become: true
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core

- name: Install motif wares from snap (Ubuntu)
  snap:
    name: slack
  become: true
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core

- name: Create /nix directory for Nix installation (Ubuntu)
  file:
    path: /nix
    state: directory
    mode: '0755'
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
  become: true
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core
    - nix

- name: Download and install Nix (Ubuntu)
  shell: |
    curl -L https://nixos.org/nix/install | sh
  args:
    creates: "{{ ansible_env.HOME }}/.nix-profile"
  become: false
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core
    - nix

- name: Source Nix profile in zsh configuration (Ubuntu)
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: 'source $HOME/.nix-profile/etc/profile.d/nix.sh'
    state: present
    create: yes
  become: false
  when: ansible_facts.distribution == "Ubuntu"
  tags:
    - install
    - core
    - nix
